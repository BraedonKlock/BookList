package BestSeller;

import java.time.LocalDate;
import java.util.Scanner;

public class BookManager {
    private final static String DEFAULT_FILE_NAME = "amazonbooks.csv";
    private final static Scanner scanner = new Scanner(System.in);
    private static BookList bookList = new BookList();

    public static void main(String[] args) {
        try {
            BookManager.manageBookList();
        } catch (BookException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }

    private static void manageBookList() {
        int option = 0;
        do {
            showMenu();
            try {
                option = Integer.parseInt(scanner.nextLine());
                switch (option) {
                    case 1:
                        try {
                            BookManager.loadBookList();
                        } catch (BookException e) {
                            System.out.println(e.getMessage());
                        }
                        break;
                    case 2:
                        try {
                            BookManager.printBookList();
                        } catch (BookException e) {
                            System.out.println(e.getMessage());
                        }
                        break;
                    case 3:
                        try {
                            BookManager.addbook();
                        } catch (BookException e) {
                            System.out.println(e.getMessage());
                        }
                        break;
                    case 4:
                        try {
                            BookManager.editBook();
                        } catch (BookException e) {
                            System.out.println(e.getMessage());
                        }
                        break;
                    case 5:
                        try {
                            BookManager.deleteBook();
                        } catch (BookException e) {
                            System.out.println(e.getMessage());
                        }
                        break;
                    case 6:
                        try {
                            BookManager.saveBookList();
                        } catch (BookException e) {
                            System.out.println(e.getMessage());
                        }
                        break;
                    case 7:
                        BookManager.searchBook();
                        break;
                    case 8:
                        BookManager.exit();
                        break;
                    default:
                        System.out.println("\n**Invalid option. Try again.**\n");
                }
            } catch (NumberFormatException e) {
                System.out.println("Invalid entry. Enter a number between 1 and 8.");
                option = 0;
            }
        } while (option != 8);
    }

    public static void showMenu() {
        System.out.println("|| Menu - Best Sellers OOP/A1 ||\n"
                + "|| Team: Andrew Paiva - Braedon Klock ||\n"
                + "================================\n"
                + "1. Load Booklist\n"
                + "2. Show Booklist\n"
                + "3. Add book\n"
                + "4. Edit a book\n"
                + "5. Delete a book\n"
                + "6. Save booklist\n"
                + "7. Search in the list\n"
                + "8. Exit\n"
                + "Choose an option:");
    }

    public static void loadBookList() throws BookException {
        System.out.println("Name of file to create booklist(Type \"Exit\" or press Enter for default file \"amazonbooks.csv\")");
        String fileName = scanner.nextLine();

        if (fileName.equals(""))
            fileName = DEFAULT_FILE_NAME;
        if (fileName.equalsIgnoreCase("Exit")) {
            System.out.println("\n***Exiting***\n");
            return;
        }
        bookList.loadBookList(fileName);
    }

    public static void printBookList() throws BookException {
        bookList.printBookList();
        System.out.print("\n");
    }

    public static void addbook() throws BookException {
        System.out.print("Title: ");
        String title = scanner.nextLine();
        System.out.print("Author(s): ");
        String author = scanner.nextLine();
        System.out.print("Original language: ");
        String language = scanner.nextLine();

        int published;
        while (true) {
            System.out.print("Year first published: ");
            String input = scanner.nextLine().trim();

            if (input.isEmpty()) {
                System.out.println("\n***Must enter a year***\n");
                continue;
            }

            try {
                published = Integer.parseInt(input);
                int currentYear = LocalDate.now().getYear();

                if (published > currentYear) {
                    System.out.println("\n***Invalid year! Enter year earlier than current year***\n");
                } else {
                    break;
                }

            } catch (NumberFormatException e) {
                System.out.println("\n***Input must be a valid number***\n");
            }
        }

        float sales;
        while (true) {
            System.out.print("Sales in millions: ");
            String input = scanner.nextLine();

            if (input.isEmpty()) {
                System.out.println("\n***Must enter a number***\n");
                continue;
            }

            try {
                sales = Float.parseFloat(input);
                if (sales < 0) {
                    System.out.println("\n***Invalid number. Number must be greater than 0***\n");
                } else {
                    break;
                }
            } catch (NumberFormatException e) {
                System.out.println("\n***Input must be a valid number***\n");
            }
        }

        System.out.print("Genre: ");
        String genre = scanner.nextLine();
        int index = bookList.bestSellers.size();
        Book book = new Book(title, author, language, published, sales, genre, index);
        bookList.addBook(book);
    }

    public static void editBook() throws BookException {
        bookList.editBook();
    }

    public static void deleteBook() throws BookException {
        bookList.deleteBook();
    }

    public static void saveBookList() throws BookException {
        bookList.saveBookList();
    }

    public static void searchBook() {
        if (bookList.bestSellers.isEmpty()) {
            System.out.println("\nBooklist is empty...\n");
            return;
        }

        System.out.println("Enter data you want to search: ");
        String dataToSearch = scanner.nextLine();
        bookList.searchBook(dataToSearch);
    }

    public static void exit() {
        System.out.println("***Exiting***");
        scanner.close();
    }
}
